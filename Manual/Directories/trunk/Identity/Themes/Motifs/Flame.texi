@subsection Goals

This section describes the steps we followed to construct the
@emph{Flame} artistic motif. This section may be useful for anyone
interested in reproducing the @emph{Flame} artistic motif, or in
creating new artistic motifs for The CentOS Project corporate visual
identity (@pxref{Directories trunk Identity}).

@subsection Description

The @emph{Flame} artistic motif was built using the flame filter of
Gimp 2.2 in CentOS 5.5.

The flame filter of Gimp can produce stunning, randomly generated
fractal patterns. The flame filter of Gimp gives us a great oportunity
to reduce the time used to produce new artistic motifs, because of its
``randomly generated'' nature. Once the artistic motif be created, it
is propagated through all visual manifestations of CentOS Project
corporate visual identity using the @file{centos-art.sh} script
(@pxref{Directories trunk Scripts Bash}) inside the CentOS Artwork Repository.

To set the time intervals between each new visual style production, we
could reuse the CentOS distribution major release schema.  I.e., we
could produce a new visual style, every two years, based on a new
``randomly generated'' flame pattern, and publish the whole corporate
visual identity (i.e., distribution stuff, promotion stuff, websites
stuff, etc.) with the new major release of CentOS distribution all
together at once.

Producing a new visual style is not one day's task. Once we have
defined the artistic motif, we need to propagate it through all visual
manifestations of The CentOS Project corporate visual identity. When
we say that we could produce one new visual style every two years we
really mean: to work two years long in order to propagate a new visual
style to all visual manifestations of The CentOS Project corporate
visual identity.

Obviously, in order to propagate one visual style to all different
visual manifestations of The CentOS Project corporate visual identity,
we need first to know which the visual manifestations are.  To define
which visual manifestations are inside The CentOS Project corporate
visual identity is one of the goals the CentOS Artwork Repository and
this documentation manual are both aimed to satisfy.

Once we define which the visual manifestation are, it is possible to
define how to produce them, and this way, organize the automation
process. Such automation process is one of the goals of
@file{centos-art.sh} script.

With the combination of both CentOS Artwork Repository and
@file{centos-art.sh} scripts we define work lines where translators,
programmers, and graphic designers work together to distribute and
reduce the amount of time employed to produce The CentOS Project
monolithic corporate identity.

From a monolithic corporate visual identity point of view, notice that
we are producing a new visual style for the same theme (i.e.,
@emph{Flame}). It would be another flame design but still a flame
design. This idea is very important to be aware of, because we are
somehow ``refreshing'' the theme, not changing it at all. 

This way, as we are ``refreshing'' the theme, we still keep oursleves
inside the monolithic conception we are trying to be attached to
(i.e., one unique name, and one unique visual style for all visual
manifestations).

Producing artistic motifs is a creative process that may consume long
time, specially for people without experienced knowledge on graphic
design land. Using ``randomly generated'' conception to produce
artistic motifs could be, practically, a way for anyone to follow in
order to produce maintainable artistic motifs in few steps. 

Due to the ``randomly generated'' nature of Flame filter, we find that
@emph{Flame} pattern is not always the same when we use @emph{Flame}
filter interface.

Using the same pattern design for each visual manifestation is
essential in order to maintain the visual connection among all visual
manifestations inside the same theme.  Occasionally, we may introduce
pattern variations in opacity, size, or even position but never change
the pattern design itself, nor the color information used by images
considered part of the same theme.

@quotation
@strong{Important}
When we design background images, which are considered part of the
same theme, it is essential to use the same design pattern always.
This is what makes theme images to be visually connected among
themeselves, and so, the reason we use to define the word ``theme''
as: a set of images visually connected among themeselves.
@end quotation

In order for us to reproduce the same flame pattern always,
@emph{Flame} filter interface provides the @samp{Save} and @samp{Open}
options. The @samp{Save} option brings up a file save dialog that
allows you to save the current Flame settings for the plug-in, so that
you can recreate them later.  The @samp{Open} option brings up a file
selector that allows you to open a previously saved Flame settings
file.

The Flame settings we used in our example are saved in the file:

@verbatim
trunk/Identity/Themes/Motifs/Flame/Backgrounds/Xcf/800x600.xcf-flame.def
@end verbatim

@subsection Construction

@subsubsection Step 1: Set image size

Create an empty image and fill the @samp{Background} layer with black
(@code{000000}) color. Image dimensions depend on the final
destination you plan to use the image for. For the sake of our
construction example we used an image of 640x480 pixels and 300 pixels
per inch (ppi).

@subsubsection Step 2: Add base color and pattern information 

Create a new layer named @samp{Base}, place it over @samp{Background}
layer and fill it with the base color (@code{7800ff}) you want to have
your background image set in.  Add a mask to @samp{Base} layer using
radial gradient and blur it.  You may need to repeat this step more
than once in order to achieve a confortable black radial degradation
on the right side of your design.

Duplicate @samp{Base} layer and name it @samp{Paper}. Place
@samp{Paper} layer over @samp{Base} layer. Remove content of
@samp{Paper} layer and fill it with @samp{Paper (100x100)} pattern.
Once you've done with black radial degradation, reduce the
@samp{Paper} layer opacity to 20%. 

Notice that when we duplicate one layer, the mask information related
to layer is preserved from previous to next layer. This saves us some
of the time required to produce different layers with the same mask
information on them.

Duplicate @samp{Paper} layer and rename it @samp{Stripes}. Remove
paper pattern from @samp{Stripes} layer. Fill @samp{Stripes} layer
with @samp{Stripes (48x48)} pattern and reduce the @samp{Stripes}
layer opacity to 15%.

@subsubsection Step 3: Add flame motif

Create a new layer named @samp{Flame}. Set the foreground
(@code{003cff}) and background (@code{0084ff}) colors to the gradient
you want to build the flame motif. 

To build flame motif, use the flame filter (@samp{Filters > Render >
Nature > Flame...}) on @samp{Flame} layer. We used a layer mask, with
a radial gradient on it to control the boundaries of flame motif on
@samp{Flame} layer.

Duplicate @samp{Flame} layer and rename it `Flame Blur'. Place `Flame
Blur' below @samp{Flame} layer. Apply Gussian blur filter
(@samp{Filters > Blur > Gussian Blur...}) until reaching the desiered
effect.

The opacity value, in @samp{Flame} layers, may vary from one image to
another based on the place the image will be finally placed on.  For
example, images used as desktop background have the @samp{Flame} layer
opacity set at 100% but @samp{Flame Blur} is set to 70%.  However, you
may find that background images used in anaconda progress slides have
opacity reduced differently, in order to reduce brightness in a way
that texts could look clean and readable over it.

@subsubsection Step 4: Add foreground color

Create a new layer named @samp{Color}, place it on top of all visible
layers and fill it with plain color (@code{4c005a}). Reduce
@samp{Color} layer opacity to 20%. You can use the @samp{Color} layer
to control the right side color information you want to produce the
image for.

Duplicate @samp{Flame} layer and create a new layer named
@samp{Color#1}. Place @samp{Color#1} layer on top of layer named
@samp{Color}. Remove the mask information from @samp{Color#1} layer
and recreate a new one using an inverted alpha channel as reference.
Remove @samp{Color#1} layer content and fill it back with plain black
(@code{000000}) color. Reduce @samp{Color#1} opacity to 20%.  In this
step we created a mask to protect the flame artistic motif from black
color, so when we decrement or increment the opacity of layer, the
flame artistic motif wouldn't be affected, just the environment
suround it.

When you set color information, remember that the same artistic motif
needs to be indexed to 14 and 16 colors, in order to produce Grub and
Syslinux visual manifestations respectively. Using many different
colors in the artistic motif may reduce the possibility of your design
to fix all different situations in.  Likewise, using more colors in
one design, and less colors in another design will reduce the
connectivity among your designs, since color information is relevant
to visual identity. 

When you propagate your artistic motif visual style to different
visual manifestations of CentOS Project corporate visual identity, it
is up to you to find out justice and compromise among all possible
variables you may face.

@subsection See also

@menu
* Directories trunk Identity Themes Motifs::
* Directories trunk Identity Themes::
* Directories trunk Identity::
* Directories trunk::
@end menu
