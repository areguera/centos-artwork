@subsection Goals

This section describes the @emph{Flame} artistic motif. This section
may be useful for anyone interested in reproducing the @emph{Flame}
artistic motif, or in creating new artistic motifs for The CentOS
Project corporate visual identity.

@subsection Description

The @emph{Flame} artistic motif was built using the flame filter of
Gimp 2.2 in CentOS 5.5.

The flame filter of Gimp can produce stunning, randomly generated
fractal patterns. The flame filter of Gimp gives us a great oportunity
to reduce the time used to produce new artistic motifs, because of its
``randomly generated'' nature. Once the artistic motif be created, it
is propagated through all visual manifestations of CentOS Project
corporate visual identity using the @file{centos-art.sh} script
(@pxref{Directories trunk Scripts}) inside the CentOS Artwork
Repository.

To set the time intervals between each new visual style production, we
could reuse the CentOS distribution major release schema.  I.e., we
could produce a new visual style, every two years, based on a new
``randomly generated'' flame pattern, and publish the whole corporate
visual identity (i.e., distribution stuff, promotion stuff, websites
stuff, etc.) with the new major release of CentOS distribution all
together at once.

Producing a new visual style is not one day's task. Once we have
defined the artistic motif, we need to propagate it through all visual
manifestations of The CentOS Project corporate visual identity. When
we say that we could produce one new visual style every two years we
really mean: to work two years long in order to propagate a new visual
style to all visual manifestations of The CentOS Project corporate
visual identity.

Obviously, in order to propagate one visual style to all different
visual manifestations of The CentOS Project corporate visual identity,
we need first to know which the visual manifestations are.  To define
which visual manifestations are inside The CentOS Project corporate
visual identity is one of the goals the CentOS Artwork Repository and
this documentation manual are both aimed to satisfy.

Once we define which the visual manifestation are, it is possible to
define how to produce them, and this way, organize the automation
process. Such automation process is one of the goals of
@file{centos-art.sh} script.

With the combination of both CentOS Artwork Repository and
@file{centos-art.sh} scripts we define work lines where translators,
programmers, and graphic designers work together to distribute and
reduce the amount of time employed to produce The CentOS Project
monolithic corporate identity.

From a monolithic corporate visual identity point of view, notice that
we are producing a new visual style for the same theme (i.e.,
@emph{Flame}). It would be another flame design but still a flame
design. This idea is very important to be aware of, because we are
somehow ``refreshing'' the theme, not changing it at all. 

This way, as we are ``refreshing'' the theme, we still keep oursleves
inside the monolithic conception we are trying to be attached to
(i.e., one unique name, and one unique visual style for all visual
manifestations).

Producing artistic motifs is a creative process that may consume long
time, specially for people without experienced knowledge on graphic
design land. Using ``randomly generated'' conception to produce
artistic motifs could be, practically, a way for anyone to follow in
order to produce maintainable artistic motifs in few steps. 

Due to the ``randomly generated'' nature of Flame filter, we find that
@emph{Flame} pattern is not always the same when we use @emph{Flame}
filter interface.

Using the same pattern design for each visual manifestation is
essential in order to maintain the visual connection among all visual
manifestations inside the same theme.  Occasionally, we may introduce
pattern variations in opacity, size, or even position but never change
the pattern design itself, nor the color information used by images
considered part of the same theme.

@quotation
@strong{Important}
When we design background images, which are considered part of the
same theme, it is essential to use the same design pattern always.
This is what makes theme images to be visually connected among
themeselves, and so, the reason we use to define the word ``theme''
as: a set of images visually connected among themeselves.
@end quotation

In order for us to reproduce the same flame pattern always,
@emph{Flame} filter interface provides the @samp{Save} and @samp{Open}
options. The @samp{Save} option brings up a file save dialog that
allows you to save the current Flame settings for the plug-in, so that
you can recreate them later.  The @samp{Open} option brings up a file
selector that allows you to open a previously saved Flame settings
file.

The Flame settings we used in our example are saved in the file named
@file{800x600.xcf-flame.def}, inside the @file{Backgrounds/Xcf}
directory structure.

@ifhtml
@subsection Screenshots

@image{trunk/Identity/Themes/Motifs/Flame/1/Concept/motif-thumb-250,,,,jpg}
@image{trunk/Identity/Themes/Motifs/Flame/2/Concept/motif-thumb-250,,,,jpg}
@image{trunk/Identity/Themes/Motifs/Flame/3/Concept/motif-thumb-250,,,,jpg}
@end ifhtml

@subsection See also

@itemize
@item @xref{Directories trunk Identity Themes Motifs}.
@item @xref{Directories trunk Identity Themes}.
@item @xref{Directories trunk Identity}.
@item @xref{Directories trunk}.
@end itemize
