-- 2008 --

The CentOS Artwork Repository started at CentOS Developers mailing list.

Alain Reguera Delgado shares ideas in a thread about Anaconda progress
slide images and the possibility of automating their construction.

Ralph Angenendt rises up his hand asking: Do you have something to
show?

Alain Reguera Delgado posts a Bash script to produce slide images in
different languages ---together with the proposition of creating a
Subversion centralized repository where translations and image
production could be distributed inside CentOS Community---.

Karanbirn Sighn considers the idea intresting and provides the
infrastructure to support the effort as the CentOS Artwork SIG.

    https://projects.centos.org/svn/artwork/
    https://projects.centos.org/trac/artwork/

Alain Reguera Delagdo uploads the rendering script to CentOS Artwork
Repository.

Ralph Angenendt documents the rendering script.

With the rendering script and the rendering script documentation
available, translators start to download working copies of CentOS
Artwork Repository and to produce slide images in their own languages.

-- 2009 --

The rendering script starts to evolve into centos-art.sh script, a
command-line interface to manipulate the CentOS Artwork Repository.

Corporate identity concepts taken from Wikipedia and related books are
introduced as development reference. The main goal of centos-art.sh
turns to: automate production of a monolithic corporate visual
identity structure based on CentOS Mission and CentOS Release Schema. 

Alain Reguera Delgado is out of Internet for an undefined amount of
time, but continues developing CentOS Artwork Repository and its
automation tool (i.e., the centos-art.sh script) off-line.

Documentation begins to take form in LaTeX format.

-- 2010 -- 

Inside centos-art.sh script, functionalities start to get identified
and separated one from another. For example, when images are rendered,
there is no need to load manual functionality. There are now common
functionalities and specific functionalities. Common functionalities
are loaded when the script is initiated and are available to specific
functionalities.

The directory structure is optimized to implements the corporate
identity concepts and the centos-art.sh script.  The CentOS Artwork
Repository directory structure places the organizational convenctions
that centos-art.sh script needs to do what we expect from it to do.

The following functionalities start to take form as part of
centos-art.sh script:

    Render
    ------
    To produce translated images using Inkscape and Sed replacement
    commands.

    Manual
    ------
    To administer repository documentation using Texinfo. Almost all
    LaTeX-based documentation was moved to this functionality. Texinfo is a
    documentation system that uses a single source file to produce both online
    information and printed output.  This means that instead of writing two
    different documents, one for the online information and the other for a
    printed work, you need write only one document.  Therefore, when the work
    is revised, you need revise only that one document.
     
    Locale 
    ------
    To translate centos-art.sh command-line interface messages using
    gettext.

    Shell  
    -----
    To perform massive actions inside shell scripts.
    
    Svg
    ---
    To perform massive actions inside SVG files.

    Html
    ----
    To perform massive actions inside HTML files.

    Path
    ----
    To automate manipulation of files, branches, and tags. 

    About
    -----
    To print license, authors, history, copying, etc.

2011 -- 
