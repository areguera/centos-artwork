# This file provides the apache configuration you need to copy under
# `/etc/httpd/conf.d/' directory, in order to execute the
# `centos-web.cgi' script.  The configuration provided in this file is
# described in two sections, one for aliases and other for virtual
# domains.
# ------------------------------------------------------------------
# $Id$
# ------------------------------------------------------------------

# ------------------------------------------------------------------
# Configuration Through Aliases:
#
# This configuration assumes you are a web developer whom needs to
# download a working copy of `centos-web' tree into your workstation
# and also be able of testing the changes you made before commit them
# up to central repository.
#
# As possible solution, you need to create the following directory
# structure in your home directory:
#
#   ~/user
#   |-- cgi-bin                 (1)
#   |   `-- centos-web          (2)
#   |       |-- apps
#   |       `-- centos-web.cgi
#   `-- public_html             (3)
#       |-- images
#       `-- stylesheet.css
#
#   (1): This directory must be created with a
#   `httpd_sys_script_exec_t' selinux context. This directory
#   organizes cgi scripts and related executable files.
#
#   (2): This directory must be created using subversion's `co'
#   command. For example, consider the cgi-bin location where it is
#   stored in the central repository and download it here. Notice that
#   both central repository and home directory structure used for
#   organize cgi script are different and you need to accomodate it in
#   your home directory, not in the central repository.
#
#   (3): This directory must be created with a `httpd_sys_content_t'
#   selinux context. This directory contains all public files cgi
#   scripts need (e.g., images and css files). 
#
# Finally, be sure to configure Apache HTTP server to serve pages in
# the `public_html' directory stored in your home directory. This is
# done by enabling the UserDir option inside Apache's main
# configuration file (i.e., `/etc/httpd/conf/httpd.conf').

ScriptAliasMatch ^/(.+)/(.*)$ "/home/*/cgi-bin/$1/$1.cgi"
AliasMatch       ^/public/(.*)$ "/home/centos/public_html"

# ------------------------------------------------------------------
# Configuration Through Virtual Domains
#
# This configuration assumes you are a system administrator whom needs
# to put the `webenv.cgi' script in production. For example, if you
# administer the `centos.org' domain, this configuration would let you
# to run the `webenv.cgi' script with an URL like
# `http://www.centos.org/'.
#
# This configuration requires that you set up your DNS to point such
# URLs to the same IP address and copy this file (i.e., `webenv.conf')
# into the `/etc/httpd/conf.d/' directory. Once you've done this,
# reload the httpd service (e.g., /sbin/service httpd reload) and use
# the URL you set up to reach the application. 
#
# Notice that, in this configuration you don't make changes inside the
# `webenv.cgi' script source code. In this configuration, the
# application's source code would be in a place accesable by apache
# and root users only (e.g., `/var/www/cgi-bin') with the only purpose
# of being productive there. Of course, you as system administrtors
# can update the `webenv.cgi' source code in this location when web
# developers do release new version of it.

#NameVirtualHost *:80
#
#<VirtualHost *:80>
#    ServerName  projects.centos.org
#    DocumentRoot /var/www/html
#</VirtualHost>
#
#<VirtualHost *:80>
#    ServerName  www.centos.org
#    ScriptAliasMatch ^/[^public](.*)$ "/var/www/cgi-bin/webenv.cgi"
#    Alias /public "/var/www/html"
#</VirtualHost>
