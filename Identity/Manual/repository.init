# -*-perl-*-
#
# repository.init -- 
#

# -iso
# if set, ISO8859 characters are used for special symbols (like copyright, etc)
$USE_ISO = 1;

# -I
# add a directory to the list of directories where @include files are
# searched for (besides the directory of the file). additional '-I'
# args are appended to this list.  (APA: Don't implicitely search .,
# to conform with the docs!) my @INCLUDE_DIRS = (".");
@INCLUDE_DIRS = ("/home/centos/artwork");

# Extension used on output files.
$EXTENSION = "xhtml";

# Horizontal rules.
$DEFAULT_RULE = '<div class="page-line white"><hr style="display:none;" /></div>';
$SMALL_RULE = $DEFAULT_RULE;
$MIDDLE_RULE = $DEFAULT_RULE;
$BIG_RULE = $DEFAULT_RULE;

# -split section|chapter|node|none
# if $SPLIT is set to 'section' (resp. 'chapter') one html file per
# section (resp. chapter) is generated. If $SPLIT is set to 'node' one
# html file per node or sectionning element is generated. In all these
# cases separate pages for Top, Table of content (Toc), Overview and
# About are generated.  Otherwise a monolithic html file that contains
# the whole document is created.
$SPLIT = 'section';

# -sec-nav|-nosec-nav
# if this is set then navigation panels are printed at the beginning
# of each section.  If the document is split at nodes then navigation
# panels are printed at the end if there were more than $WORDS_IN_PAGE
# words on page.
#
# If the document is split at sections this is ignored.
#
# This is most useful if you do not want to have section navigation
# with -split chapter. There will be chapter navigation panel at the
# beginning and at the end of chapters anyway.
$SECTION_NAVIGATION = 0;

$print_page_head	      = \&T2H_XHTML_print_page_head;
$print_page_foot	      = \&T2H_XHTML_print_page_foot;
$print_frame              = \&T2H_XHTML_print_frame;
$button_icon_img	      = \&T2H_XHTML_button_icon_img;

#FIXME update once it is more stabilized in texi2html.init
sub T2H_XHTML_print_page_head
{
    my $fh = shift;
    my $longtitle = "$Texi2HTML::THISDOC{'title_unformatted'}";
    $longtitle .= ": $Texi2HTML::UNFORMATTED{'This'}" if exists $Texi2HTML::UNFORMATTED{'This'};
    $T2H_LANG='en';
    print $fh <<EOT;
<?xml version="1.0"?>
<!DOCTYPE html
    PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="$T2H_LANG" lang="$T2H_LANG">
<head>

    <title>$longtitle</title>

    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <meta name="description" content="$longtitle" />
    <meta name="keywords" content="$longtitle" />
    <meta name="resource-type" content="document" />
    <meta name="distribution" content="global" />
    <meta name="generator" content="$Texi2HTML::THISDOC{program}" />
    <meta name="copyright" content="2009-2011 Alain Reguera Delgado" />

    <link href="/home/centos/artwork/trunk/Identity/Manual/repository.css" rel="stylesheet" type="text/css" media="screen projection" />

</head>

<body>

<a name="top" />

<div id="wrap">

    <div id="page-body">

        <div id="content">

<!-- Created on $Texi2HTML::THISDOC{today} by $Texi2HTML::THISDOC{program} -->
EOT
}

sub T2H_XHTML_print_page_foot
{
    my $fh = shift;
    print $fh <<EOT;

            <div class="page-line"><hr style="display:none;" /></div>

        </div>

    </div>

    <div class="page-line white"><hr style="display:none;" /></div>

</div>

</body>

</html>
EOT
}

# / in <img>
sub T2H_XHTML_button_icon_img
{
    my $button = shift;
    my $icon = shift;
    my $name = shift;
    return '' if (!defined($icon));
    if (defined($name) && $name)
    {
        $name = ": $name";
    }
    else
    {
        $name = '';
    }
    $button = "" if (!defined ($button));
    return qq{<img src="$icon" border="0" alt="$button$name" align="middle" />};
}

$simple_map{'*'} = '<br />';

# formatting functions

$def_line	       = \&t2h_xhtml_def_line;
$index_summary     = \&t2h_xhtml_index_summary;
$image             = \&t2h_xhtml_image;

# need / in <img>
sub t2h_xhtml_image($$$)
{
   my $file = shift;
   my $base = shift;
   my $preformatted = shift;
   return "[ $base ]" if ($preformatted);
   return "<img src=\"$file\" alt=\"$base\" />";
}

# process definition commands line @deffn for example
# <u> replaced by <span>
sub t2h_xhtml_def_line($$$$$)
{
   my $category = shift;
   my $name = shift;
   my $type = shift;
   my $arguments = shift;
   my $index_label = shift;
   $index_label = '' if (!defined($index_label));
   $name = '' if (!defined($name) or ($name =~ /^\s*$/));
   $type = '' if (!defined($type) or $type =~ /^\s*$/);
   if (!defined($arguments) or $arguments =~ /^\s*$/)
   {
       $arguments = '';
   }
   else
   {
       $arguments = '<i>' . $arguments . '</i>';
   }
   my $type_name = '';
   $type_name = " $type" if ($type ne '');
   $type_name .= ' <b>' . $name . '</b>' if ($name ne '');
   $type_name .= $arguments . "\n";
   if (! $DEF_TABLE)
   {
       return '<dt>'. '<span style="text-decoration: underline">' . $category . ':</span>' . $type_name . $index_label . "</dt>\n";
   }
   else
   {
       
       return "<tr>\n<td align=\"left\">" . $type_name . 
       "</td>\n<td align=\"right\">" . $category . $index_label . "</td>\n" . "</tr>\n";
   }
}

# There is a br which needs / 
sub t2h_xhtml_index_summary($$)
{
    my $alpha = shift;
    my $nonalpha = shift;
    my $join = '';
    my $nonalpha_text = '';
    my $alpha_text = '';
    $join = " &nbsp; \n<br />\n" if (@$nonalpha and @$alpha);
    if (@$nonalpha)
    {
       $nonalpha_text = join("\n &nbsp; \n", @$nonalpha) . "\n";
    }
    if (@$alpha)
    {
       $alpha_text = join("\n &nbsp; \n", @$alpha) . "\n &nbsp; \n";
    }
    #I18n
    return "<table><tr><th valign=\"top\">Jump to: &nbsp; </th><td>" .
    $nonalpha_text . $join . $alpha_text . '</td></tr></table>';
}
