@subheading Name

The @code{help} functionlity is part of @command{centos-art.sh} script
and standardizes documentation tasks inside the working copy of CentOS
Artwork Repository.

@subheading Synopsis

@command{centos-art help [OPTIONS] path/to/dir @dots{}}

The @file{path/to/dir} parameter specifies what directory structure
inside the working copy of CentOS Artwork Repository you want to
process. 

The @code{help} functionality of @command{centos-art.sh} script
accepts the following options:

@table @option
@item --quiet

Supress all output messages except error messages.  When this option
is passed, all confirmation requests are supressed as well and a
possitive answer is assumed for them, just as if the
@option{--answer-yes} option had been provided.

@item --answer-yes

Assume `yes' to all confirmation requests.

@item --dont-commit-changes

Supress all commit and update actions realized over files, before and
after the action itself had took place over files in the working copy.

@item --backend="STRING"

Specifies the documentation system used as backend to manage the
repository documentation manual. The @command{centos-art.sh} script
plans to provide backend support for @samp{texinfo}, @samp{linuxdoc}, and
@samp{docbook} documentation systems. However, at this moment, only
@samp{texinfo} backend is functional.

@item --search="STRING"

Go to node pointed by index entry @samp{STRING}.

@item --edit "path/to/dir"

Edit documentation entry related to path specified by
@file{path/to/dir}. 

The @file{path/to/dir} must point to any directory inside the
repository. When more than one @file{path/to/dir} are passed as
non-option arguments to the @command{centos-art.sh} script
command-line, they are queued for further edition.  The edition itself
takes place through your default text editor (e.g., the one you
specified in the @env{EDITOR} environment variable) and the text
editor opens one file at time (i.e., the queue of files to edit is not
loaded in the text editor.).

@item --read "path/to/dir"

Read documentation entry specified by @file{file/to/dir} path, using
@command{info} command. This option is useful to read the repository
manual on text-based terminals. This option is also used internally by
@command{centos-art.sh} script to print out the reference you can
follow to know more about an error message.

@item --update

Update output files rexporting them from Texinfo source files.

@item --copy "path/to/file.texinfo" "path/to/dir"

Duplicate documentation entries under @file{trunk/Manual} directory
structure. 

When documentation entries are copied, only two non-option arguments
can be passed to @command{centos-art.sh} script. In this case, the
first non-option argument is considered the source location and the
second one the target location. Both source location and target
location must point to a directory under the working copy or files
under @file{trunk/Manuals/Texinfo/Directories} directory structure.

@item --delete "path/to/file.texinfo"

Delete documentation entries under @file{trunk/Manual} directory
structure.

When documentation entries are deleted, all cross references that
point to the deleted documentation entry will be rebuilt to remove
Texinfo markup and remark the fact that it had been removed indeed
from the repository.

@item --rename "path/to/file.texinfo" "path/to/file.texinfo"

Rename documentation entries under @file{trunk/Manual} directory
structure.

@end table

When documentation entries are removed (e.g., through
@option{--delete} or @option{--rename} options), the
@command{centos-art.sh} script takes care of updating nodes, menus and
cross references related to documentation entries in order to keep the
manual structure in a correct state.

@subheading Description

The CentOS Project corporate identity is organized through directories
in The CentOS Artwork Repository. Each directory inside the repository
responds to conceptual ideas and uses files to get the implementation
of those ideas.  The @code{help} functionality of
@command{centos-art.sh} script uses this directory layout as reference
to document the conceptual ideas it is based on. Each directory inside
the repository can be documented, in order to provide the explanation
of what it is for and how automation scripts use it.

@quotation
@strong{Caution} When the repository directory layout changes, the
documentation layout related must be changed as well in order for both
locations to be consistent in their paths. Otherwise, you may end up
having documentation entries that point to unexistent directories in
the repository.
@end quotation

Files inside the repository are not documented. The only exception to
this rule are files under @file{trunk/Manual} directory, the place
where documentation source files are stored in. Inside this location
you can refer @file{.texinfo} files for direct actions using the
@code{help} functionality of @command{centos-art.sh} script. File
actions, in this location, are also used to manage specific parts of
the manual which have no association outside @file{trunk/Manual}
directory (e.g., Preface, Introduction, etc.).

The manual structure (@pxref{Directories trunk Manual}) is supported
by GNU Texinfo, a documentation system that can produce both online
information and a printed manual from a single source. The @code{help}
functionality is an interface you can use to control the source files
in the manual structure.  

The manual output is produced from Texinfo files and stored in
@file{trunk/Manual} on different formats including Info, PDF, XHTML,
XML and TXT.

Whatever your prefered language be, you'll always edit documentation
entries in English language and so will be the output produced from
them, when you use the @code{help} functionality of
@command{centos-art.sh} script. However, you can achieve the manual
localization to your prefered language by applying the @code{locale}
functionality of @command{centos-art.sh} script (@pxref{Directories
trunk Scripts Functions Locale}) to any of the XML-based English
outputs supported by @command{centos-art.sh} script (e.g., XHTML and
Docbook) to produce portable objects for your prefered language and
the @code{render} functionality of @command{centos-art.sh} script
(@pxref{Directories trunk Scripts Functions Render}) to produce the
translated version of the output XHTML files taken in first place. The
translated version is produced in the same format of the file taken
as reference to build the portable objects. XHTML format in this case.

@subheading Examples

@table @command
@item centos-art help --edit trunk/Identity

This command edits the documentation entry related to
@file{trunk/Identity} directory.

@item centos-art help --read trunk/Identity

This command reads the doumentation entry related to
@file{trunk/Identity} directory in info format.

@end table

@subheading Author

Written by Alain Reguera Delgado.

@subheading Reporting bugs

Report bugs to @email{centos-artwork@@centos.org} mailing list.

@subheading Copyright

Copyright @copyright{}  2009, 2010, 2011 The CentOS Project.

This is free software.  You may redistribute copies of it under the
terms of the GNU General Public License (@pxref{GNU General Public
License}).  There is NO WARRANTY, to the extent permitted by law.

@subheading See also

@itemize
@item @ref{Directories trunk Scripts Functions}
@item @ref{Directories trunk Scripts}
@item @ref{Directories trunk}
@end itemize
