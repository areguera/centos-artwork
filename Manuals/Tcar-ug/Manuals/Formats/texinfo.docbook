<sect1 id="manuals-format-texinfo">

    <title>Texinfo Documentation Format</title>

    <para>
        This section describes the implementation of Texinfo
        documentation format inside the <function>help</function>
        functionality of <command>centos-art.sh</command> script. More
        information about Texinfo documentation system itself can be
        found by running the <command>info texinfo</command> command.
    </para>

    <sect2>
    <title>Introduction</title>
    <para>
        ...
    </para>
    </sect2>

    <sect2 id="manuals-formats-texinfo-structure">
    <title>Texinfo Document Structure</title>
    <para>
        The <function>help</function> functionality of
        <command>centos-art.sh</command> provides a document structure
        that makes documentation manuals created through it to be
        scalable and maintainable through time.  This document
        structure follows the idea of an upside-down tree to organize
        chapters, sections, subsections, and the like; where there is
        a Top node to contain manual's main definitions (e.g., title,
        copyright note, abstract, and the list of chapters).  Inside
        chapters, the information is logically organized through
        sections, subsections and subsubsections as described in <xref
        linkend="manuals-production-identifying-structure" />.
    </para>

    <para> 
        The first time you use the <function>help</function>
        functionality to create a documentation manual in Texinfo
        format, the <function>help</function> functionality considers
        the working directory you are placed in to determine where to
        store the documentation manual source files.  When the current
        working directory is <filename
        class="directory">branches/Manuals/Texinfo</filename>, the
        documentation manual directory is created therein.  On all
        other situations, the documentation manual directory is
        created under <filename
        class="directory">trunk/Manuals</filename> directory.  Once
        the documentation manual directory has been created, the
        <function>help</function> functionality creates the related
        definition files using Texinfo documentation templates as
        described in <xref linkend="manuals-formats-texinfo-templates"
        />.
    </para>

    <para>
        Inside the documentation manual directory, source files are
        stored inside language specific directories.  Language
        specific directories are necessary to implement
        internationalization of source files written in Texinfo
        format, as described in <xref
        linkend="manuals-formats-texinfo-l10n" />.
    </para>
        
    <para>
        Inside the language specific directory, the following files
        exist to store the manual's main definitions (e.g., title,
        subtitle, author, copyright notice, chapters, appendixes,
        indexes and all the similar stuff a documentation manual would
        have).  In addition to these files, there is one directory for
        each chapter created inside the manual.  Inside each chapter
        directory, you'll found the files controling the section
        definitions related to that chapter they belong to.  The
        section files (a.k.a.  <quote>documentation entries</quote>)
        are suffixed with a <filename
        class="extension">texinfo</filename> extension and named
        arbitrarily, as it is illustrated in <xref
        linkend="manuals-texinfo-structure-1" />. Inside section files
        it is where you write the manual's content itself.  Inside
        chapters, you can create as many sections as you need.
    </para>

    <example id="manuals-texinfo-structure-1">
    <title>Texinfo document structure</title>
    <screenshot>
    <screeninfo>Texinfo document structure</screeninfo>
    <mediaobject>
    <textobject>
    <programlisting>trunk/Manuals/${MANUAL_NAME}
`-- ${LANG}
    |-- ${CHAPTER_NAME}
    |   |-- chapter-menu.texinfo
    |   |-- chapter-nodes.texinfo
    |   |-- chapter.texinfo
    |   `-- ${SECTION_NAME}.texinfo
    |-- Licenses
    |   |-- chapter-menu.texinfo
    |   |-- chapter-nodes.texinfo
    |   `-- chapter.texinfo
    |-- ${MANUAL_NAME}-index.texinfo
    |-- ${MANUAL_NAME}-menu.texinfo
    |-- ${MANUAL_NAME}-nodes.texinfo
    `-- ${MANUAL_NAME}.texinfo</programlisting>
    </textobject>
    </mediaobject>
    </screenshot>
    </example>
    </sect2>

    <sect2 id="manuals-formats-texinfo-templates">
    <title>Texinfo Document Templates</title>
    <para>
        The <function>help</function> functionality uses Texinfo
        document templates to create and maintain Texinfo document
        structures like that one described in <xref
        linkend="manuals-formats-texinfo-structure" />.  Texinfo
        document templates are language-specific. This means that
        there is (or, at least, must be) one Texinfo document template
        for each language you plan to support documentation manuals
        for.  Notice that it is not possible to retrive translatable
        strings from Texinfo source files (e.g., through
        <application>gettext</application> procedures) so translators
        cannot localize documentation source files to other languages,
        independently from people writing the manual.
    </para>

    <note>
    <para>
        When the <code>help</code> functionality doesn't find a
        Texinfo document template for that language the documentation
        manual is being currently created for, the <code>help</code>
        functionality takes the files it needs from Texinfo document
        templates written in English language then.
    </para>
    </note>

    <para>
        The files related to Texinfo document templates are stored in
        the directory 
    </para>

    <screen>
trunk/Scripts/Bash/Functions/Help/Texinfo/Templates</screen>

    <para>
        and illustrated in <xref
        linkend="manuals-formats-texinfo-templates-example1" />. The
        Texinfo document template provides the initial state of
        Texinfo source files. The initial state of Texinfo source
        files can be customized by the following files:
    </para>

    <variablelist>

    <varlistentry>
    <term><filename>chapter.texinfo</filename></term>
    <listitem>
    <para>
        This file contains the Texinfo chapter definition used by
        <function>help</function> functionality when new chapters are
        created inside the documentation manual. When chapters are
        created for first time, they come without any introduction. If
        you want to add/update any information inside the chapter
        definition, edit the related chapter file inside the
        documentation manual you are working on, not the template file
        used to create it.
    </para>
    </listitem>
    </varlistentry>

    <varlistentry>
    <term><filename>section.texinfo</filename></term>
    <listitem>
    <para>
        This file contains the Texinfo section definition used by
        <function>help</function> functionality when new documentation
        entries are created inside the documentation manual. When
        documentation entries are created for first time, they are
        created as empty documentation entries that you need to fill
        up with content. Again, if you want to update the content of
        sections inside the documentation manual, update the
        related documentation entry inside the documentation manual,
        not the template file used to create it.
    </para>
    </listitem>
    </varlistentry>

    <varlistentry>
    <term><filename>chapter-menu.texinfo</filename></term>
    <listitem>
    <para>
        This file is part of Texinfo chapter definition and should be
        initially empty. Later, when chapters are created for first
        time, this file is copied as it is (i.e., empty) into the
        documentation manual to store the Texinfo menu entries related
        to all documentation entries created inside the chapter. The
        Texinfo menu entries are automatically created using Texinfo
        source files as reference.
    </para>
    </listitem>
    </varlistentry>

    <varlistentry>
    <term><filename>chapter-nodes.texinfo</filename></term>
    <listitem>
    <para>
        This file is part of Texinfo chapter definition and contains
        the node definition the <function>help</function>
        functionality uses as reference to create the list of Texinfo
        nodes related to all documentation entries created inside the
        chapter. The Texinfo nodes are automatically created using
        Texinfo meny entries as reference, after they have been
        updated from Texinfo source files.
    </para>
    </listitem>
    </varlistentry>
    </variablelist>
        
    <para>
        There are other files which aren't related to manual's source
        files, but to manual's output files. Such files are described
        below and can be found both inside and outside the
        language-specific directories so you can control common and
        specific output settings through them.
    </para>

    <variablelist>
    <varlistentry>
    <term><filename>manual.texinfo</filename></term>
    <listitem>
    <para>
        This file can be found inside the language-specific directory
        and contains the manual's main definitions (e.g., document
        title, document language, document authors, copyright notice,
        etc.). 
    </para>
    </listitem>
    </varlistentry>

    <varlistentry>
    <term><filename>manual-menu.texinfo</filename></term>
    <listitem>
    <para>
        This file can be found inside the language-specific directory
        and contains the menu definitions of chapters inside the
        manual. Menu definitions in this file are automatically
        created when chapters are created inside the manual.
        Generally, you don't need to edit this file once the
        documentation manual has been created.
    </para>
    </listitem>
    </varlistentry>

    <varlistentry>
    <term><filename>manual-nodes.texinfo</filename></term>
    <listitem>
    <para>
        This file can be found inside the language-specific directory
        and contains the node definitions of all chapters inside the
        manual.  Node definitions in this file are automatically
        created based on menu definitions (see
        <filename>manual-menu.texinfo</filename> file above) and they
        don't include any content here.  Instead, as part of the node
        definition, the <code>@include</code> command is used to
        connect each node with its content.  Generally, you don't need
        to edit this file once the documentation manual has been
        created.
    </para>
    </listitem>
    </varlistentry>

    <varlistentry>
    <term><filename>manual-index.texinfo</filename></term>
    <listitem>
    <para>
        This file can be found inside the language-specific directory
        and contains the Texinfo commands used to generated an
        organized view of all indexes you defined inside documentation
        entries so they can be quickly accessed. Generally, you don't
        need to edit this file once the documentation manual has been
        created.
    </para>
    </listitem>
    </varlistentry>

    <varlistentry>
    <term><filename>manual-init.pl</filename></term>
    <listitem>
    <para>
        This file can be found inside or outside language-specific
        directories and contains Texi2html initialization script. The
        file outside language-specific directory specify
        initialization parameters to all language-specific
        directories. On the other hand, the file inside the
        language-specific directory control language-specific
        definitions for XHTML output (e.g., in order for Texi2html to
        produce localized content it is required that string
        localization be set this way).
    </para>
    </listitem>
    </varlistentry>

    <varlistentry>
    <term><filename>manual.sed</filename></term>
    <listitem>
    <para>
        This file can be found inside and outside language-specific
        directories and contain special transformations for Texi2html
        output. Again, when this file is inside language-specific
        directories the transformation have are applied to that
        language-specific XHTML output and when it is outside
        language-specific directories the transformations are applied
        to all language-specific XHTML outputs.  Most transformations
        achived through this file are to produce admonitions since
        Texinfo documentation format (as in
        <package>texinfo-4.8-14.el5</package>) doesn't have an
        internal command to build them.
    </para>
    </listitem>
    </varlistentry>

    <varlistentry>
    <term><filename>manual.conf</filename></term>
    <listitem>
    <para>
        This file contains the initial configuration of documentation
        manuals written in Texinfo format. When the documentation
        manual is created for first time, this file is copied into the
        documentation manual target directory so you can customize
        specific information like menu order, title styles and
        templates assignment. More details about the content of this
        file can be found in <xref
        linkend="manuals-formats-texinfo-configuration" />.
    </para>
    </listitem>
    </varlistentry>

    </variablelist>
    
    <example id="manuals-formats-texinfo-templates-example1">
    <title>Texinfo document templates</title>
    <screenshot>
    <screeninfo>Texinfo document templates</screeninfo>
    <mediaobject>
    <textobject>
    <programlisting>trunk/Scripts/Bash/Functions/Help/Texinfo/Templates
|-- ${LANG}
|   |-- Chapters
|   |   |-- chapter-menu.texinfo
|   |   |-- chapter-nodes.texinfo
|   |   |-- chapter.texinfo
|   |   `-- section.texinfo
|   |-- Licenses
|   |   |-- GFDL.texinfo
|   |   |-- GPL.texinfo
|   |   |-- chapter-menu.texinfo
|   |   |-- chapter-nodes.texinfo
|   |   `-- chapter.texinfo
|   |-- manual-index.texinfo
|   |-- manual-init.pl
|   |-- manual-menu.texinfo
|   |-- manual-nodes.texinfo
|   |-- manual.conf
|   |-- manual.sed
|   `-- manual.texinfo
|-- manual-init.pl
`-- manual.sed</programlisting>
    </textobject>
    </mediaobject>
    </screenshot>
    </example>

    <para>
        Inside the directory structure of Texinfo document templates,
        the <filename class="directory">Chapters</filename> directory
        organizes chapter specific models used to create and maintain
        both chapter and sections files inside manuals. On the other
        hand, the <filename class="directory">Licenses</filename>
        directory organizes the license information linked from all
        manuals.  Notice the license information is not copied into
        documentation manuals when they are created, but refered from
        this location where they are maintained.  This configuration
        permites that all documentation manuals written in Texinfo
        format inside &TCAR; do use the same license information and
        if a change is committed to the license files, such changes be
        immediatly propagated to documentation manuals the next time
        their output files be updated.
    </para>
    </sect2>

    <sect2 id="manuals-formats-texinfo-configuration">
    <title>Texinfo Document Configuration</title>
    <para>
        ...
    </para>
    </sect2>

    <sect2 id="manuals-formats-texinfo-l10n">
    <title>Texinfo Document Internationalization</title>
    <para>
        To produce localized documentation manuals through Texinfo
        documentation backend it is necessary to create one
        documentation manual for each language it is desired to
        support documentation for.  Documentation manuals created in
        this configuration don't have a direct relation among
        themselves except that one adopted by people writting them to
        keep their content syncronized.  In this configuration
        translators take one documentation manual as reference (a.k.a.
        the source manual) and produce several translated manuals
        based on its content.  To keep track of changes inside the
        source manual, the underlaying version control system must be
        used considering that there is no direct way to apply
        <application>gettext</application><footnote>
        <para>
            The <application>gettext</application> program  translates
            a  natural language message into the user's language, by
            looking up the translation in a message catalog. For more
            information about the <application>gettext</application>
            program, run <command>info gettext</command>.
        </para>
        </footnote> procedures to Texinfo source files.
    </para>

    <para>
        In order to maintain localization of Texinfo source files
        through <application>gettext</application> procedures, it is
        necessary to convert the Texinfo source files into
        XML format first.  This way it would be possible to make use of
        <function>locale</function> and <function>render</function>
        functionalities from <command>centos-art.sh</command> script
        to maintain translation messages in different languages
        through portable objets and producing localized XML files
        based on such portable objects, respectively.  Once the
        localized XML file is available, it would be a matter of using
        an XSLT processor (see the <command>xsltproc</command>
        command) to realize the convertion from XML to a localize
        Texinfo (or possible other) format.  Nevertheless, this
        workaround fails because the Document Type Definition (DTD)
        required to validate the XML file produced from
        <command>makeinfo</command> (as in
        <package>texinfo-4.8-14.el5</package>) is not availabe inside
        &TCD; (release 5.5), nor it is the XSLT files required to
        realize the transformation itself for such DTD.
    </para>

    <para>
        Another similar approach to maintain localization of Texinfo
        source files through <application>gettext</application>
        procedures would be to convert Texinfo source file to DocBook
        format; for who the required DTD and XSLT files are available
        inside &TCD;.  This way, following a procedure similar to that
        one describe for XML files above, it would be possible to end
        up having localized DocBook files that can be used as source
        to produce localized output for both online and printing
        media.  However, the DocBook output produced from
        <command>makeinfo</command> command (as in
        <package>texinfo-4.8-14.el5</package>) isn't a valid DocBook
        document according to DocBook DTDs available inside &TCD;
        (release 5.5) thus provoking the validation and transformation
        of such a malformed document to fail.
    </para>

    <sect3 id="manuals-texinfo-l10n-language">
    <title>The Document Language</title>
    <para>
        The language information of those documentation manuals
        produced through Texinfo documentation backend is declared by
        Texinfo's <code>@documentlanguage</code> command.  This
        command receives one argument refering the language code (as
        in ISO-639 standard) and must be set inside the manual's main
        definition file. Generally, there is no need to change the
        document language declaration once it has been created by the
        <function>help</function> functionality of
        <command>centos-art.sh</command> script; unless you
        mistakently create the manual for a locale code different to
        that one you previously pretended to do in first place, of
        course.
    </para>

    <para>
        The language information used in both Texinfo source files and
        XHTML output produced by the <function>help</function>
        functionality of <command>centos-art.sh</command> script is
        determined by the user's session <envar>LANG</envar>
        environment variable.  This variable can be customized in the
        graphical login screen before login, or once you've login by
        explicitly setting the value of <envar>LANG</envar>
        environment variable inside the
        <filename>~/.bash_profile</filename> file. 
    </para>

    <tip>
    <para>
        To create documentation manuals in English language the
        <envar>LANG</envar> environment variable must be set to
        <code>en_US.UTF-8</code> or something similar.  Likewise, if
        you want to create documentation manuals in a language other
        than English, be sure the <envar>LANG</envar> environment
        variable is set to the appropriate locale code, based on the
        output of the <command>locale -a | less</command> command.
    </para>
    </tip>
     
    <para>
        When producing output from Texinfo source files using the
        <command>makeinfo</command> command (as in the
        <package>texinfo-4.8-14.el5</package> package), the language
        information set by <code>@documentlanguage</code> is ignored
        in Info and HTML output, but cosidered by Tex program to
        redefine various English words used in the PDF output (e.g.,
        <quote>Chapter</quote>, <quote>Index</quote>,
        <quote>See</quote>, and so on) based on the current language
        set in.
    </para>

    </sect3>
    
    <sect3 id="manuals-texinfo-l10n-encoding">
    <title>The Document Encoding</title>
    <para>
        The encoding information of documentation manuals produced
        through Texinfo documentation backend is declared by Texinfo's
        <code>@documentencoding</code> command and can take either
        <code>US-ASCII</code>, <code>ISO-8859-1</code>,
        <code>ISO-8859-15</code> or <code>ISO-8859-2</code> as
        argument.  Nevertheless, you should be aware that the
        <code>help</code> functionality of
        <command>centos-art.sh</command> script doesn't declare the
        <code>@documentencoding</code> inside Texinfo source files.
        Let's see why.
    </para>

    <para>
        When the <code>@documentencoding</code> command is set in
        Texinfo source files, the terminal encoding you use to read
        the Info output produced from such files must be set to that
        encoding information you provided as argument to
        <code>@documentencoding</code> command; this, before using an
        Info reader to open the Info output file in the terminal.
        Otherwise, when the terminal and the Texinfo source files
        encoding definition differ one another, characters defined
        through Texinfo's special way of producing floating accents
        won't be displayed as expected (even when the
        <option>--enable-encoding</option> is provided to
        <command>makeinfo</command> command). On the other hand, when
        the <code>@documentencoding</code> command is not set in
        Texinfo source files, it is possible to write and read
        documentation manuals using the UTF-8 encoding without needing
        to use Texinfo's special way of producing floating accents
        because the terminal encoding would be able to interpret the
        characters entered when the Texinfo source files were written
        in first place.
    </para>
    
    <para>
        When Texinfo's special way of producing floating accents isn't
        used, HTML entities are not produced in XHTML output produced
        by <command>texi2html</command>, nor in the HTML output
        produced by <command>makeinfo</command>, nor in PDF output.
        In this last case, when producing PDF output, you can realize
        what the floating accents are by trying to produce an
        accentuated Spanish <code>i</code> letter (e.g.,
        <code>í</code>). When you do so, you'll note that that
        construction puts the accentuation mark
        <emphasis>over</emphasis> the <code>i</code> letter's dot,
        instead of removing the <code>i</code> letter's dot and
        put the accentuation mark on its place.  In the case of XHTML
        output, however, it possible to produce well localized XHTML
        output by setting
    </para>

    <screen>&lt;meta http-equiv="content-type" content="text/html; charset=UTF-8" /&gt;</screen>

    <para>
        on the head section of each XHTML output to instruct the web
        browsers what encoding to use to display the document content.
        Of course, in order to display the document content correctly,
        the web browser should provide support for UTF-8 encoding.
    </para>

    <para>
        These contradictions provide the reasons over which it was
        decided not to set the <code>@documentencoding</code> in those
        Texinfo source files produced by the <code>help</code>
        functionality of <command>centos-art.sh</command> script. Now,
        considering them, we can conclude that it is no viable way to
        localize Texinfo source files through
        <application>gettext</application> procedures so one
        documentation manual must be created for each language we
        desire to support documentation for. In this configuration,
        it is difficult the production of well localized PDF output,
        but it is possible to produce well localized Info, Text, and
        XHTML outputs as long as no document encoding be explicitly
        set inside Texinfo source files and UTF-8 be used as default
        terminal character encoding.
    </para>

    </sect3>

    </sect2>

</sect1>

